import{__read as t,__assign as e}from"tslib";import{logger as n}from"@liff/logger";var o=function(t,e){this._driver=t,this.liff=e,this.hooks=this._driver.hooks,this.internalHooks=this._driver.internalHooks},i=function(t,e){this._driver=t,this.liff=e,this.hooks=this._driver.hooks},r=function(){function n(){this.modules=new Map,this.hooks={},this.internalHooks={}}return n.prototype.addModule=function(n,o){this.modules.set(n,o),o.hooks&&(this.hooks[n]=Object.entries(o.hooks).reduce((function(n,o){var i,r=t(o,2),s=r[0],a=r[1];return e(e({},n),((i={})[s]=a.on.bind(a),i))}),{})),o.internalHooks&&(this.internalHooks[n]=Object.entries(o.internalHooks).reduce((function(n,o){var i,r=t(o,2),s=r[0],a=r[1];return e(e({},n),((i={})[s]=a.on.bind(a),i))}),{}))},n.prototype.hasModule=function(t){return this.modules.has(t)},n}(),s=function(){function t(t,e,n){this.driver=t,this.context=e,this.option=n}return t.prototype.install=function(){return this.factory(this.driver,this.context)},Object.defineProperty(t.prototype,"name",{get:function(){return"use"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"defaultOption",{get:function(){return{namespacePrefix:"$"}},enumerable:!1,configurable:!0}),t.prototype.factory=function(t,e){var o=Object.assign({},this.defaultOption,this.option).namespacePrefix;return function(i,r){if(!i||"function"!=typeof i.install||"string"!=typeof i.name)return n.warn("To install the plugin, you need to define the `name` property and the `install` method."),this;var s="".concat(o).concat(i.name);if(t.hasModule(s))return this;var a=i.install.call(i,e,r);return this["".concat(s)]?(n.warn("There is a duplicate plugin name. `".concat(s,"` plugin namespace will be override.")),this["".concat(s)]=a):void 0!==a&&(this["".concat(s)]=a),t.addModule(s,i),this}},t}();export{i as LiffPluginContextImpl,o as ModuleContextImpl,r as ModuleDriverImpl,s as UseModule};
