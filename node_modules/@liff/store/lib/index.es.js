import{INVALID_CONFIG as n,STORE_KEY as t,STORE_OBJECT as o}from"@liff/consts";import{isInClient as c}from"@liff/is-in-client";import{createLiffError as i,cookie as f}from"@liff/util";var r={};function u(){return r}function e(n){r=n}function a(o,f){if(!f)throw i(n,"liffId is necessary for liff.init()");var r=(c()?sessionStorage:localStorage).getItem("".concat(t,":").concat(f,":").concat(o));try{return null===r?null:JSON.parse(r)}catch(u){return null}}function E(n){return a(n,u().liffId)}function I(o,f){var r=u().liffId;if(!r)throw i(n,"liffId is necessary for liff.init()");(c()?sessionStorage:localStorage).setItem("".concat(t,":").concat(r,":").concat(o),JSON.stringify(f))}function l(){return E(o.CONTEXT)}function T(n){I(o.CONTEXT,n)}function S(){return((l()||{}).d||{}).aId}function s(){return((l()||{}).d||{}).autoplay||!1}function _(){return(l()||{}).profilePlus}function N(){return Boolean(E(o.IS_SUBSEQUENT_LIFF_APP))}function O(n){I(o.IS_SUBSEQUENT_LIFF_APP,n)}function A(){return E(o.APP_DATA)}function P(n){I(o.APP_DATA,n)}function C(){return E(o.MST_VERIFIER)}function D(n){I(o.MST_VERIFIER,n)}function d(){return E(o.MSIT)}function m(n){I(o.MSIT,n)}function g(){return E(o.MST)}function L(n){I(o.MST,n)}function M(){return E(o.MST_CHALLENGE)}function p(n){I(o.MST_CHALLENGE,n)}function R(){return E(o.CLIENT_ID)}function v(n){I(o.CLIENT_ID,n)}function F(){return E(o.RAW_CONTEXT)}function K(){return E(o.FEATURE_TOKEN)}function h(n){I(o.FEATURE_TOKEN,n)}function y(){return E(o.ID_TOKEN)}function U(n){I(o.ID_TOKEN,n)}function X(){return E(o.ACCESS_TOKEN)}function G(n){I(o.ACCESS_TOKEN,n)}function w(o){var f=u().liffId;if(!f)throw i(n,"liffId is necessary for liff.init()");(c()?sessionStorage:localStorage).removeItem("".concat(t,":").concat(f,":").concat(o))}function B(){return E(o.LOGIN_TMP)}function x(n){I(o.LOGIN_TMP,n)}function H(){w(o.LOGIN_TMP)}function J(n){var c=u();f.set("".concat(t,":").concat(o.EXPIRES,":").concat(c.liffId),n.getTime(),{expires:n.toUTCString(),path:"/",secure:null})}function Q(){var n=u();return f.get("".concat(t,":").concat(o.EXPIRES,":").concat(n.liffId))}function V(){var n=u();f.remove("".concat(t,":").concat(o.EXPIRES,":").concat(n.liffId),{path:"/"})}function b(){return E(o.DECODED_ID_TOKEN)}function j(n){I(o.DECODED_ID_TOKEN,n)}function k(){Object.keys(o).forEach((function(n){w(o[n])})),V()}export{k as clean,E as get,S as getAId,X as getAccessToken,A as getAppData,a as getByLiffId,R as getClientId,u as getConfig,l as getContext,b as getDecodedIDToken,Q as getExpireTime,K as getFeatureToken,y as getIDToken,N as getIsSubsequentLiffApp,s as getIsVideoAutoPlay,B as getLoginTmp,d as getMSIT,g as getMST,M as getMSTChallenge,C as getMSTVerifier,_ as getProfilePlus,F as getRawContext,w as remove,V as removeExpireTime,H as removeLoginTmp,I as set,G as setAccessToken,P as setAppData,v as setClientId,e as setConfig,T as setContext,j as setDecodedIDToken,J as setExpireTime,h as setFeatureToken,U as setIDToken,O as setIsSubsequentLiffApp,x as setLoginTmp,m as setMSIT,L as setMST,p as setMSTChallenge,D as setMSTVerifier};
