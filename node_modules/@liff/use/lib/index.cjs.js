"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("tslib"),e=require("@liff/logger"),n=function(t,e){this._driver=t,this.liff=e,this.hooks=this._driver.hooks,this.internalHooks=this._driver.internalHooks},o=function(t,e){this._driver=t,this.liff=e,this.hooks=this._driver.hooks},i=function(){function e(){this.modules=new Map,this.hooks={},this.internalHooks={}}return e.prototype.addModule=function(e,n){this.modules.set(e,n),n.hooks&&(this.hooks[e]=Object.entries(n.hooks).reduce((function(e,n){var o,i=t.__read(n,2),r=i[0],s=i[1];return t.__assign(t.__assign({},e),((o={})[r]=s.on.bind(s),o))}),{})),n.internalHooks&&(this.internalHooks[e]=Object.entries(n.internalHooks).reduce((function(e,n){var o,i=t.__read(n,2),r=i[0],s=i[1];return t.__assign(t.__assign({},e),((o={})[r]=s.on.bind(s),o))}),{}))},e.prototype.hasModule=function(t){return this.modules.has(t)},e}(),r=function(){function t(t,e,n){this.driver=t,this.context=e,this.option=n}return t.prototype.install=function(){return this.factory(this.driver,this.context)},Object.defineProperty(t.prototype,"name",{get:function(){return"use"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"defaultOption",{get:function(){return{namespacePrefix:"$"}},enumerable:!1,configurable:!0}),t.prototype.factory=function(t,n){var o=Object.assign({},this.defaultOption,this.option).namespacePrefix;return function(i,r){if(!i||"function"!=typeof i.install||"string"!=typeof i.name)return e.logger.warn("To install the plugin, you need to define the `name` property and the `install` method."),this;var s="".concat(o).concat(i.name);if(t.hasModule(s))return this;var a=i.install.call(i,n,r);return this["".concat(s)]?(e.logger.warn("There is a duplicate plugin name. `".concat(s,"` plugin namespace will be override.")),this["".concat(s)]=a):void 0!==a&&(this["".concat(s)]=a),t.addModule(s,i),this}},t}();exports.LiffPluginContextImpl=o,exports.ModuleContextImpl=n,exports.ModuleDriverImpl=i,exports.UseModule=r;
